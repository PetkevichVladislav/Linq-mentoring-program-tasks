Title: Expression Calculator

Description:
You are to implement a simple expression calculator. 
The calculator should be capable of parsing mathematical expressions and evaluating them to produce the correct result with Expressions.
To achieve this, you can implement the Shunting Yard Algorithm to convert infix expressions into Reverse Polish Notation (RPN),
and then evaluate the expression to obtain the result.

Requirements:
*Implement a class with methods to perform the conversion and evaluation 
 which takes a string representing a mathematical expression as input and returns an System.Linq.Expressions.
*Modify ExpressionCalculator.Calculate method to use your implemented class.
*Calculator should support next operations: Addition (+), Subtraction (-), Division (/), Multiplication (*) and Parentheses (): Operations inside parentheses are performed first.
*Ensure proper handling of operator precedence and parentheses.
*Implement error handling for invalid expressions and edge cases.
*All Expressions.Task3.Calculator.Tests.ExpressionCalculatorTests unit tests should be green.
*Document your code and provide clear comments where necessary to explain the logic and functionality (optional).